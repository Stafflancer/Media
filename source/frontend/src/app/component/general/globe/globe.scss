$backSize: 160%;
$cardBgColor: rgba(0, 4, 38, 0.9);

[data-component="globe"] {
	display: none;

	@include respond-to(MEDIUM) {
		display: block;
		@include size(100%, 0);
		position: relative;
		overflow: visible;
		.globe__bg-fix, .globe__overlay {
			position: absolute;
			width: $backSize;
			padding-top: $backSize;
			margin-left: -$backSize/2;
			margin-top: -28%;
			@include position(50%, 50%);
			background: radial-gradient(50% 50% at 50% 50%, rgba(42, 48, 181, .5) 0%, rgba(202, 223, 244, 0) 100%);
		}
		.globe__container {
			width: 100%;
			padding-top: 100%;
			canvas {
				@include size(100%, 100%);
				@include position(0, 0);
				position: absolute;
			}
		}
		.globe__overlay {
			visibility: hidden;
			opacity: 0;
			z-index: 4;
			background: radial-gradient(50% 50% at 50% 50%, #CADFF4 0%, rgba(202, 223, 244, 0) 100%);
			transition: visibility .3s, opacity .3s;

			&.show {
				visibility: visible;
				opacity: 1;
			}

			.globe__card {

				&-popup{
					font-weight: 500;
					color: $whiteShade1;
					position: absolute;
					padding: 4rem;
					@include size(422px, 480px);
					@include offset(50%, 50%);
					background: $cardBgColor;
					backdrop-filter: blur(30px);
					border-radius: 10px 10px 60px 10px;
				}
				
				&-name {
					display: flex;
					align-items: center;
					justify-content: space-between;
					text-transform: uppercase;
					.globe__card-line {
						width: 18.9rem;
						display: inline-block;
						height: 1px;
						background: radial-gradient(#ACB2EA 100%, #748CCA 100%, #3B4384 80%);
						opacity: .4;
					}
				}

				&-units {
					margin-top: 17.2rem;
					.copy {
						opacity: .6;
						padding-top: 4px;
						line-height: 2;
					}
				}

				&-place {
					margin-top: 3.6rem;
					.copy {
						opacity: .6;
						padding-top: 4px;
						line-height: 2;
					}
				}

				&-close {
					position: absolute;
					@include size(4rem, 4rem);
					background: $whiteShade1;
					border-radius: 50%;
					right: 4rem;
					bottom: 4rem;
					transition: transform .3s;
					span[data-component="icon"] {
						@include size(1rem, 1rem);
						@include offset(50%, 50%);
						position: absolute;
						transform: translate(-50%, -50%);
						svg {
							path{
								fill: $cardBgColor;
							}
						}
					}
					
					&:hover {
						transform: scale(.8)
					}
				}
			}
		}
	}
}
